openapi: 3.0.0
info:
  description: >-
    API for PhantomX AX-12 Reactor Robot Arm (Leubot) in BÃ¼ro 61-102.<br/>
    Users must retrieve an API Key by <a href="#/user/addUser">addUser</a> for any Leubot control actuation.<br/>
    After 15 minutes of inactivity, the user will be automatically deleted from the system.<br/>
    Rate limiting of the API is configured; all the methods allow for 1 request per second to prevent the server from overloading.<br/>
    Watch the live streaming of the rooms at<br/>
    - <a href="https://interactions.ics.unisg.ch/61-102/cam1/live-stream">https://interactions.ics.unisg.ch/61-102/cam1/live-stream</a>.<br/>
    - <a href="https://interactions.ics.unisg.ch/61-102/cam2/live-stream">https://interactions.ics.unisg.ch/61-102/cam2/live-stream</a>.<br/>
  version: 1.2.2
  title: Leubot API docs - University of St.Gallen (ICS-HSG)
  contact:
    email: iori.mizutani@unisg.ch
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: Manage the privilege for the robot control
  - name: robot
    description: Control base servos of PhantomX AX-12 Reactor Robot Arm (All the request requires a token of the user)
paths:
  /user:
    get:
      tags:
        - user
      summary: Get the current user information
      description: >-
        Check if anyone is currently
        using the robot control API
      operationId: getUser
      responses:
        '200':
          description: current user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
    post:
      tags:
        - user
      summary: Add a user
      description: >-
        Add yourself to the system and gain the API Key
        for the robot API access
      operationId: addUser
      responses:
        '201':
          description: user created
          headers:
            Location:
              description: The URL to delete the user; the last element in the path is the API key
              schema:
                type: string
                format: url
                example: https://api.interactions.ics.unisg.ch/leubot/v1.2/user/6dc1e80c14edf749e2ceb86d98ea1ca1
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: another user already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
        description: User information to add
        required: true
  /user/{token}:
    delete:
      tags:
        - user
      summary: Remove a user
      description: >-
        Remove yourself from the system with the token
        to release the privilege to others
      operationId: removeUser
      parameters:
      - in: path
        name: token
        description: token of the user to delete
        required: true
        schema:
          type: string
        example: 6dc1e80c14edf749e2ceb86d98ea1ca1
      responses:
        '204':
          description: user deleted
        '404':
          description: 'invalid token, no such user'
  /elbow:
    put:
      tags:
        - robot
      summary: Set the elbow joint rotation
      description: >-
        Set the rotation value for the elbow joint. The valid range for `value`
        is [400,650].
      operationId: putElbow
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: target value accepted, robot is moving towards it
        '400':
          description: bad input parameter
        '401':
          description: invalid token provided; not authorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCommand'
            example:
              value: 400
        description: Pose information for the elbow joint
        required: true
  /wrist/angle:
    put:
      tags:
        - robot
      summary: Set the wrist angle
      description: >-
        Set the angle value for the wrist joint. The valid range for `value` is
        [200,830].
      operationId: putWristAngle
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: target value accepted, robot is moving towards it
        '400':
          description: bad input parameter
        '401':
          description: invalid token provided; not authorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCommand'
            example:
              value: 580
        description: Pose information for the wrist angle
        required: true
  /wrist/rotation:
    put:
      tags:
        - robot
      summary: Set the wrist rotation
      description: >-
        Set the rotation value for the wrist joint. The valid range for `value`
        is [0,1023].
      operationId: putWristRotation
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: target value accepted, robot is moving towards it
        '400':
          description: bad input parameter
        '401':
          description: invalid token provided; not authorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCommand'
            example:
              value: 512
        description: Pose information for the wrist rotation
        required: true
  /gripper:
    put:
      tags:
        - robot
      summary: Set the gripper
      description: >-
        Set the value for the gripper. The valid range for `value` is [0,512]
        where `0` is to close and `512` is to open all the way.
      operationId: putGripper
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: target value accepted, robot is actuating its gripper
        '400':
          description: bad input parameter
        '401':
          description: invalid token provided; not authorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotCommand'
            example:
              value: 255
        description: Pose information for the gripper
        required: true
  /reset:
    put:
      tags:
        - robot
      summary: Reset the robot
      description: >-
        Reset the robot to the initial state. The `value` field is ignored in the request body.
      operationId: resetRobot
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: action accepted, robot is resetting
        '401':
          description: invalid token provided; not authorized
servers:
  - url: 'https://api.interactions.ics.unisg.ch/leubot1/v1.2'
  - url: 'https://api.interactions.ics.unisg.ch/leubot2/v1.2'
components:
  schemas:
    UserInfo:
      type: object
      required:
        - email
        - name
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: Iori Mizutani
        email: iori.mizutani@unisg.ch
    RobotCommand:
      type: object
      properties:
        value:
          type: integer
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY
